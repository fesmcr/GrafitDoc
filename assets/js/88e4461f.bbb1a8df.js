"use strict";(self.webpackChunkgrafit_doc=self.webpackChunkgrafit_doc||[]).push([[6455],{5017:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(4848),s=t(8453);t(1470),t(9365);const i={},a="ISpatialGraph",o={id:"doc-sharp/ISpatialGraph",title:"ISpatialGraph",description:"ISpatialGraph",source:"@site/docs/doc-sharp/ISpatialGraph.md",sourceDirName:"doc-sharp",slug:"/doc-sharp/ISpatialGraph",permalink:"/GrafitDoc/docs/doc-sharp/ISpatialGraph",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CPrimalDirectedGraph",permalink:"/GrafitDoc/docs/doc-sharp/CPrimalDirectedGraph"}},l={},d=[{value:"ISpatialGraph",id:"ispatialgraph-1",level:2},{value:"BBMinPoint",id:"bbminpoint",level:2},{value:"BBMaxPoint",id:"bbmaxpoint",level:2},{value:"NodesGeometryList",id:"nodesgeometrylist",level:2},{value:"GetNodeGeometryItem",id:"getnodegeometryitem",level:2},{value:"IsPointInsideBBox",id:"ispointinsidebbox",level:2},{value:"ClosestNodeToPoint",id:"closestnodetopoint",level:2},{value:"NodeObjectById",id:"nodeobjectbyid",level:2},{value:"GenerateUndirectedEdgeGeometry",id:"generateundirectededgegeometry",level:2},{value:"GenerateDirectedEdgeGeometry",id:"generatedirectededgegeometry",level:2},{value:"GenerateDirectedEdgeGeometryAsTwoInternalLists",id:"generatedirectededgegeometryastwointernallists",level:2}];function c(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ispatialgraph",children:"ISpatialGraph"}),"\n",(0,r.jsx)(n.h2,{id:"ispatialgraph-1",children:"ISpatialGraph"}),"\n",(0,r.jsx)(n.p,{children:"Defines a contract for a spatial graph that includes nodes and edges with geometric and weight properties."}),"\n",(0,r.jsx)(n.h2,{id:"bbminpoint",children:"BBMinPoint"}),"\n",(0,r.jsx)(n.p,{children:"Gets the minimum bounding box point of the graph's nodes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value"})}),"\n",(0,r.jsx)(n.p,{children:"The lower-left corner point of the graph's nodes bounding box."}),"\n",(0,r.jsx)(n.h2,{id:"bbmaxpoint",children:"BBMaxPoint"}),"\n",(0,r.jsx)(n.p,{children:"Gets the maximum bounding box point of the graph's nodes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value"})}),"\n",(0,r.jsx)(n.p,{children:"The upper-right corner point of the graph's nodes bounding box."}),"\n",(0,r.jsx)(n.h2,{id:"nodesgeometrylist",children:"NodesGeometryList"}),"\n",(0,r.jsx)(n.p,{children:"Gets the list of geometric representations for all nodes in the graph."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Value"})}),"\n",(0,r.jsxs)(n.p,{children:["A list of ",(0,r.jsx)(n.a,{href:"#"})," instances, each representing the geometric data of a node."]}),"\n",(0,r.jsx)(n.h2,{id:"getnodegeometryitem",children:"GetNodeGeometryItem"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the geometric representation of a node by its ID."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"NodeId"})," - The ID of the node whose geometric data is to be retrieved."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.a,{href:"#"})," instance representing the geometric information of the specified node."]}),"\n",(0,r.jsx)(n.h2,{id:"ispointinsidebbox",children:"IsPointInsideBBox"}),"\n",(0,r.jsx)(n.p,{children:"Determines if a given point is located inside the bounding box of the graph."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Point"})," - The point to check."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(n.p,{children:"True if the point is within the bounding box; otherwise, false."}),"\n",(0,r.jsx)(n.h2,{id:"closestnodetopoint",children:"ClosestNodeToPoint"}),"\n",(0,r.jsx)(n.p,{children:"Finds the closest node ID to a given point and calculates the distance to it."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Point"})," - The point for which to find the closest node ID."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(n.p,{children:"A tuple containing the ID of the closest node and the distance to that node."}),"\n",(0,r.jsx)(n.h2,{id:"nodeobjectbyid",children:"NodeObjectById"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the spatial point representation of a node by its ID."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"Id"})," - The ID of the node whose spatial representation is requested."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(n.p,{children:"A point representing the spatial location of the specified node."}),"\n",(0,r.jsx)(n.h2,{id:"generateundirectededgegeometry",children:"GenerateUndirectedEdgeGeometry"}),"\n",(0,r.jsx)(n.p,{children:"Generates a list of undirected edge objects based on the spatial point representations of nodes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"EdgeFromPoints"})," - A function that takes two points (representing the endpoints of an edge) and returns an ",(0,r.jsx)(n.a,{href:"#"})," representing the edge between those points."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remarks"})}),"\n",(0,r.jsx)(n.p,{children:"Since only node objects as points are stored within the graph, edges geometry are dynamically generated from this data."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.p,{children:["A list of ",(0,r.jsx)(n.a,{href:"#"})," instances representing the undirected edges generated from the spatial points of nodes."]}),"\n",(0,r.jsx)(n.h2,{id:"generatedirectededgegeometry",children:"GenerateDirectedEdgeGeometry"}),"\n",(0,r.jsx)(n.p,{children:"Generates a list of directed edge objects based on the spatial point representations of nodes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"EdgeFromPoints"})," - A function that takes two points (representing the endpoints of an edge) and returns an ",(0,r.jsx)(n.a,{href:"#"})," representing the edge between those points."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remarks"})}),"\n",(0,r.jsx)(n.p,{children:"Since only node objects as points are stored within the graph, edges geometry are dynamically generated from this data."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.p,{children:["A list of ",(0,r.jsx)(n.a,{href:"#"})," instances representing the directed edges generated from the spatial points of nodes."]}),"\n",(0,r.jsx)(n.h2,{id:"generatedirectededgegeometryastwointernallists",children:"GenerateDirectedEdgeGeometryAsTwoInternalLists"}),"\n",(0,r.jsx)(n.p,{children:"Generates geometry for directed edges as two separate lists, one for each direction."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"EdgeFromPoints"})," - A function that creates an edge object from two points, representing the start and end points of an edge."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remarks"})}),"\n",(0,r.jsx)(n.p,{children:"Since only node objects as points are stored within the graph, edges geometry are dynamically generated from this data."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsx)(n.p,{children:"A tuple containing two lists of type . The first list contains edge geometries for the forward direction,\r\nand the second list contains geometries for the opposite direction."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(4164);const s={tabItem:"tabItem_Ymn6"};var i=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>I});var r=t(6540),s=t(4164),i=t(3104),a=t(6347),o=t(205),l=t(7485),d=t(1682),c=t(9466);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=u(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[d,h]=g({queryString:t,groupId:s}),[m,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,c.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),f=(()=>{const e=d??m;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,i]),tabValues:i}}var x=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=o[t].value;s!==r&&(d(n),a(s))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:h,onClick:c,...i,className:(0,s.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=m(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,j.jsx)(b,{...e,...n}),(0,j.jsx)(v,{...e,...n})]})}function I(e){const n=(0,x.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(n))}}}]);